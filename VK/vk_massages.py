from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id

from User import User

edit_dict = {
            'first_name': '–ò–º—è',
            'last_name': '–§–∞–º–∏–ª–∏—è',
            'age': '–í–æ–∑—Ä–∞—Å—Ç',
            'gender': '–ü–æ–ª',
            'city': '–≥–æ—Ä–æ–¥'
            }

edit_dict_criteria = {
    'sex': '–ü–æ–ª',
    'age_from': '–í–æ–∑—Ä–∞—Å—Ç –æ—Ç',
    'age_to': '–í–æ–∑—Ä–∞—Å—Ç –¥–æ',
    'city': '–ì–æ—Ä–æ–¥',
}
def get_hello_massage(user_id, first_name):
    text_message = f'üöÄ –ü—Ä–∏–≤–µ—Ç, {first_name}!  üëã  –Ø ‚Äì –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —ç–∫–æ–Ω–æ–º–∏—Ç ' \
    f'—Ç–≤–æ–µ –≤—Ä–µ–º—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –ª—é–±–æ–≤—å –±—ã—Å—Ç—Ä–æ –∏ –ª–µ–≥–∫–æ! ' \
    f' ‚è±Ô∏è  –•–æ—á–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å–≤–æ–µ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–∏?'

    keyboard = VkKeyboard(one_time=True)
    keyboard.add_button('—Ö–æ—á—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', color=VkKeyboardColor.POSITIVE)

    message = {
        'user_id': user_id,
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard()
    }

    return message


def get_hello_massage_error(user_id):
    text_message = f'üöÄ –ü—Ä–∏–≤–µ—Ç! ' \
                   f'–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω.' \
                   f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∑–∂–µ.'

    message = {
        'user_id': user_id,
        'message': text_message,
        'random_id': get_random_id()
    }

    return message


def get_registration_massage(user: User):
    text_message = f'–ê–Ω–∫–µ—Ç–∞:\n' \
                   f'–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É\n'
    settings = dict(one_time=False, inline=True)
    keyboard = VkKeyboard(**settings)
    keyboard.add_button(label='–ò–º—è: '+user.get_first_name(), color=VkKeyboardColor.SECONDARY,
                                  payload={"action_edit": "first_name"})
    keyboard.add_line()
    keyboard.add_button(label='–§–∞–º–∏–ª–∏—è: '+user.get_last_name(), color=VkKeyboardColor.SECONDARY,
                                   payload={"action_edit": "last_name"})
    keyboard.add_line()
    keyboard.add_button(label='–í–æ–∑—Ä–∞—Å—Ç: '+str(user.get_age()), color=VkKeyboardColor.SECONDARY,
                                   payload={"action_edit": "age"})
    keyboard.add_line()
    keyboard.add_button(label='–ü–æ–ª: '+str(user.get_gender_str()), color=VkKeyboardColor.SECONDARY,
                                   payload={"action_edit": "gender"})
    keyboard.add_line()
    keyboard.add_button(label='–ì–æ—Ä–æ–¥: '+user.get_city().get('title'), color=VkKeyboardColor.SECONDARY,
                                   payload={"action_edit": "city"})
    keyboard.add_line()
    keyboard.add_button(label='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', color=VkKeyboardColor.POSITIVE,
                                   payload={"action_save": "save_anketa"})
    # keyboard.add_line()
    # keyboard.add_callback_button(label='–ö–æ—Ä–æ—Ç–∫–æ –æ–±–æ –º–Ω–µ: '+user.get_city().get('') + '\t', color=VkKeyboardColor.SECONDARY,
    #                                payload={"action": "edit_about_me"})

    message = {
        'user_id': user.get_user_id(),
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard(),
        'peer_ids': user.get_user_id()
    }

    return message
def get_edit_massage(user_id, str_arg):
    text_message = f'–ó–∞–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ' + edit_dict[str_arg] + ':'
    if str_arg == 'gender':
        text_message += f'1 - –ñ–µ–Ω—â–∏–Ω–∞, 2 - –ú—É–∂—á–∏–Ω–∞'

    keyboard = VkKeyboard(one_time=True)
    keyboard.add_button('–û—Ç–º–µ–Ω–∞', color=VkKeyboardColor.NEGATIVE,
                        payload={"action_cancel": "cancel_edit_anketa"})

    message = {
        'user_id': user_id,
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard()
    }

    return message

# ---------------------------------------
def get_criteria_massage(user: User):
    text_message = f'–ê–Ω–∫–µ—Ç–∞:\n' \
                   f'–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É\n'
    settings = dict(one_time=False, inline=True)
    keyboard = VkKeyboard(**settings)
    keyboard.add_button(label='–ü–æ–ª: ' + user.get_sex_criteria(), color=VkKeyboardColor.SECONDARY,
                       payload={"action_edit": "gender"})
    keyboard.add_button(label='–í–æ–∑—Ä–∞—Å—Ç –æ—Ç: ' + user.get_age_to() , color=VkKeyboardColor.SECONDARY,
                       payload={"action_edit": "age_from"})
    keyboard.add_button(label='–í–æ–∑—Ä–∞—Å—Ç –¥–æ: ' + user.get_age_from() , color=VkKeyboardColor.SECONDARY,
                       payload={"action_edit": "age_to"})
    keyboard.add_line()
    keyboard.add_button(label='–ì–æ—Ä–æ–¥: ' + user.get_city_criteria(), color=VkKeyboardColor.SECONDARY,
                        payload={"action_edit": "city"})
    keyboard.add_button(label='–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ: ' + user.get_relation_criteria(), color=VkKeyboardColor.SECONDARY,
                        payload={"action_edit": "relation"})
    keyboard.add_button(label='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏', color=VkKeyboardColor.POSITIVE,
                        payload={"action_save": "save_criteria"})

    message = {
        'user_id': user.get_user_id(),
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard(),
        'peer_ids': user.get_user_id()
    }

    return message

def get_edit_massage_—Åriteria(user_id, str_arg):
    text_message = f'–ó–∞–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ' + edit_dict[str_arg] + ':'
    if str_arg == 'sex':
        text_message += f'1 - –ñ–µ–Ω—â–∏–Ω–∞, 2 - –ú—É–∂—á–∏–Ω–∞'

    keyboard = VkKeyboard(one_time=True)
    keyboard.add_button('–û—Ç–º–µ–Ω–∞', color=VkKeyboardColor.NEGATIVE,
                        payload={"action_cancel": "cancel_edit_criteria"})

    message = {
        'user_id': user_id,
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard()
    }

    return message