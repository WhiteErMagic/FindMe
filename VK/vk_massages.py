from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.utils import get_random_id

from User import User
from search_criteria import create_search_criteria


def get_hello_massage(user_id, first_name):
    text_message = f'üöÄ –ü—Ä–∏–≤–µ—Ç, {first_name}!  üëã  –Ø ‚Äì –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —ç–∫–æ–Ω–æ–º–∏—Ç ' \
    f'—Ç–≤–æ–µ –≤—Ä–µ–º—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –ª—é–±–æ–≤—å –±—ã—Å—Ç—Ä–æ –∏ –ª–µ–≥–∫–æ! ' \
    f' ‚è±Ô∏è  –•–æ—á–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å–≤–æ–µ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–∏?'

    keyboard = VkKeyboard(one_time=True)
    keyboard.add_button('—Ö–æ—á—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', color=VkKeyboardColor.POSITIVE)

    message = {
        'user_id': user_id,
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard()
    }

    return message


# if __name__ == '__main__':
#     vk_reposiroty = VKRepository()
#     for event in VkLongPoll(session).listen():
#         if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
#             text = event.text.lower()
#             user_id = event.user_id
#             user_info = session.method('users.get', {'user_ids': user_id})[0]
#             first_name = user_info['first_name']
#             # first_name = vk_reposiroty.get_user_first_name(user_id)
#             keyboard = VkKeyboard(one_time=True)
#             keyboard.add_button('start', color=VkKeyboardColor.PRIMARY)
#             keyboard.add_button('—Ö–æ—á—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', color=VkKeyboardColor.POSITIVE)
#             if text == "start":
#                 keyboard = VkKeyboard(one_time=True)
#                 keyboard.add_button('–•–æ—á—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', color=VkKeyboardColor.POSITIVE)
#                 send_message(user_id, f'üöÄ –ü—Ä–∏–≤–µ—Ç, {first_name}!  üëã  –Ø ‚Äì –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —ç–∫–æ–Ω–æ–º–∏—Ç '
#                                       f'—Ç–≤–æ–µ –≤—Ä–µ–º—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –ª—é–±–æ–≤—å –±—ã—Å—Ç—Ä–æ –∏ –ª–µ–≥–∫–æ! '
#                                       f' ‚è±Ô∏è  –•–æ—á–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å–≤–æ–µ–π –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–∫–∏?  üíñ', keyboard)
#             if text == "—Ö–æ—á—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è":
#                 keyboard = VkKeyboard(one_time=True)
#                 keyboard.add_button('–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã', color=VkKeyboardColor.POSITIVE)
#                 send_message(user_id, f'–ó–¥–æ—Ä–æ–≤–æ! üòä  –ß—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –∏–¥–µ–∞–ª—å–Ω—É—é –ø–∞—Ä—É, –º–Ω–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–≤–æ–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö.'
#                                       f' üîê  –ù–µ –≤–æ–ª–Ω—É–π—Å—è, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏. üòâ', keyboard)
#
#             if text == "—Å–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã":
#                 keyboard = VkKeyboard(one_time=False)
#                 keyboard = VkKeyboard(one_time=False)
#                 keyboard = VkKeyboard(one_time=False)
#
#
#                 keyboard.add_button('–°–æ–∑–¥–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏', color=VkKeyboardColor.POSITIVE)
#                 keyboard.add_button('–ü–æ–∏—Å–∫', color=VkKeyboardColor.POSITIVE)
#                 keyboard.add_line()
#                 keyboard.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', color=VkKeyboardColor.NEGATIVE)
#                 create_user_profile(user_id, session)
#                 send_message(user_id, '–£—Ä–∞, —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞! ü•≥ \n\n'
#                                       '–ú–æ–∂–µ—à—å —Å—Ä–∞–∑—É –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç –∏ –≥–æ—Ä–æ–¥, –Ω–∞–∂–∞–≤ "–ü–æ–∏—Å–∫". \n\n'
#                                       '–ê –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ, –Ω–∞–∂–º–∏ "–°–æ–∑–¥–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏" –∏ –º—ã –Ω–∞–π–¥—ë–º —Ç–µ–±–µ –∏–¥–µ–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤! üí• \n'
#                                       '–ö—Å—Ç–∞—Ç–∏, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –≤ —Ä–∞–∑–¥–µ–ª–µ "–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É".'
#                                       '–ñ–µ–ª–∞–µ–º —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Å–≤–æ—é —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—É—é –¥—É—à—É! ‚ù§Ô∏èüå∏   ', keyboard)
#
#                 if text == "–°–æ–∑–¥–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏":
#                     create_search_criteria(user_id, session)
#                     send_message(user_id, '–ö—Ä–∏—Ç–µ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã! üëç \n\n')
#
#                 elif text == "–ü–æ–∏—Å–∫":
#                     assa = ''
#                     # users_list = vk_repository.get_users_list(criteria_dict)
#                     # –≤—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞  —Ñ–æ—Ç–æ –∏–º—è —Ñ–∞–º–∏–ª–∏—è –≤–æ–∑—Ä–∞—Å—Ç –≥–æ—Ä–æ–¥
#                 elif text == "–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É":
#                     create_user_profile()
#                     send_message(user_id, '–ê–Ω–∫–µ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞! ü•≥ \n\n')
def get_hello_massage_error(user_id):
    text_message = f'üöÄ –ü—Ä–∏–≤–µ—Ç! ' \
                   f'–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω.' \
                   f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∑–∂–µ.'

    message = {
        'user_id': user_id,
        'message': text_message,
        'random_id': get_random_id()
    }

    return message


def get_registration_massage(user: User):
    text_message = f'–ê–Ω–∫–µ—Ç–∞:\n' \
                   f'–Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ - –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É\n'
    settings = dict(one_time=False, inline=True)
    keyboard = VkKeyboard(**settings)
    keyboard.add_callback_button(label='–ò–º—è: '+user.get_first_name(), color=VkKeyboardColor.SECONDARY,
                                  payload={"action": "edit_first_name"})
    keyboard.add_line()
    keyboard.add_callback_button(label='–§–∞–º–∏–ª–∏—è: '+user.get_last_name(), color=VkKeyboardColor.SECONDARY,
                                   payload={"action": "edit_last_name"})
    keyboard.add_line()
    keyboard.add_callback_button(label='–í–æ–∑—Ä–∞—Å—Ç: '+str(user.get_age()), color=VkKeyboardColor.SECONDARY,
                                   payload={"action": "edit_age"})
    keyboard.add_line()
    keyboard.add_callback_button(label='–ì–æ—Ä–æ–¥: '+user.get_city().get('title'), color=VkKeyboardColor.SECONDARY,
                                   payload={"action": "edit_city"})
    # keyboard.add_line()
    # keyboard.add_callback_button(label='–ö–æ—Ä–æ—Ç–∫–æ –æ–±–æ –º–Ω–µ: '+user.get_city().get('') + '\t', color=VkKeyboardColor.SECONDARY,
    #                                payload={"action": "edit_about_me"})

    message = {
        'user_id': user.get_user_id(),
        'message': text_message,
        'random_id': get_random_id(),
        'keyboard': keyboard.get_keyboard()
    }

    return message